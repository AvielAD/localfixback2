generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model brandequipo {
  id              Int            @id @default(autoincrement())
  nombre          String?        @db.VarChar(250)
  idcompanyequipo Int?
  companyequipo   companyequipo? @relation(fields: [idcompanyequipo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_brandequipo_companyequipo")
  equipos         equipos[]
}

model catalogoestado {
  id               Int                @id @default(autoincrement())
  nombre           String?            @db.VarChar(250)
  codigo           String?            @db.VarChar(250)
  reparacionestado reparacionestado[]
}

model cliente {
  id         Int          @id @default(autoincrement())
  nombre     String?      @db.VarChar(250)
  apellido   String?      @db.VarChar(250)
  telefono   String?      @db.VarChar(20)
  email      String?      @db.VarChar(250)
  reparacion reparacion[]
}

model companyequipo {
  id          Int           @id @default(autoincrement())
  nombre      String?       @db.VarChar(250)
  descripcion String?       @db.VarChar(250)
  brandequipo brandequipo[]
}

model equipos {
  id                Int              @id @default(autoincrement())
  modelopopular     String?          @db.VarChar(250)
  modelotecnico     String?          @db.VarChar(250)
  observaciones     String?
  idbrandequipo     Int?
  idcategoriaequipo Int              @default(1)
  diagnostico       diagnostico[]
  brandequipo       brandequipo?     @relation(fields: [idbrandequipo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_equipos_brandequipo")
  categoria_equipo  categoria_equipo @relation(fields: [idcategoriaequipo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_equipos_categoriaequipo")
}

model refaccion {
  id                Int                 @id @default(autoincrement())
  nombre            String?             @db.VarChar(250)
  descripcion       String?             @db.VarChar(250)
  observaciones     String?
  costocompra       Decimal?            @db.Money
  costoventa        Decimal?            @db.Money
  stock             Int?
  trabajo_refaccion trabajo_refaccion[]
}

model reparacion {
  id                     Int                      @id @default(autoincrement())
  fecharecepcion         DateTime?                @default(now()) @db.Timestamptz(6)
  fechaentrega           DateTime?                @db.Timestamptz(6)
  costototal             Decimal?                 @db.Money
  idcliente              Int?
  uuidsearch             String?                  @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  firststage             Boolean?
  idempresa              Int?
  cliente                cliente?                 @relation(fields: [idcliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reparacion_cliente")
  empresa                empresa?                 @relation(fields: [idempresa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reparacion_idempresa")
  reparacion_diagnostico reparacion_diagnostico[]
  reparacionestado       reparacionestado[]
  trabajo_refaccion      trabajo_refaccion[]
}

model reparacionestado {
  idreparacion     Int
  idcatalogoestado Int
  observaciones    String?
  status           Boolean?
  catalogoestado   catalogoestado @relation(fields: [idcatalogoestado], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reparacionestado_catalogoestado")
  reparacion       reparacion     @relation(fields: [idreparacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reparacionestado_reparacion")

  @@id([idreparacion, idcatalogoestado])
}

model trabajo {
  id                Int                 @id @default(autoincrement())
  idequipo          Int?
  idcliente         Int?
  trabajo_refaccion trabajo_refaccion[]
}

model trabajo_refaccion {
  idtrabajo    Int
  idrefaccion  Int
  idreparacion Int?
  fechatrabajo DateTime?   @db.Timestamptz(6)
  costoparcial Decimal?    @db.Money
  refaccion    refaccion   @relation(fields: [idrefaccion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trabajorefaccion_refaccion")
  reparacion   reparacion? @relation(fields: [idreparacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trabajorefaccion_reparacion")
  trabajo      trabajo     @relation(fields: [idtrabajo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trabajorefaccion_trabajo")

  @@id([idtrabajo, idrefaccion])
}

model diagnostico {
  id                     Int                      @id @default(autoincrement())
  fecha                  DateTime?                @default(now()) @db.Timestamptz(6)
  cliente                String?                  @db.VarChar(250)
  descripcionfalla       String?
  sugerenciareparacion   String?
  costopresupuesto       Decimal?                 @db.Money
  idequipo               Int?
  firststage             Boolean?
  idempresa              Int?
  equipos                equipos?                 @relation(fields: [idequipo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_diagnostico_equipos")
  empresa                empresa?                 @relation(fields: [idempresa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_diagnostico_idempresa")
  reparacion_diagnostico reparacion_diagnostico[]
}

model categoria_equipo {
  id          Int       @id @default(autoincrement())
  nombre      String?   @db.VarChar(100)
  descripcion String?
  equipos     equipos[]
}

model reparacion_diagnostico {
  idreparacion  Int
  iddiagnostico Int
  fecha         DateTime?   @default(now()) @db.Timestamptz(6)
  diagnostico   diagnostico @relation(fields: [iddiagnostico], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reparaciondiagnostico_diagnostico")
  reparacion    reparacion  @relation(fields: [idreparacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reparaciondiagnostico_reparacion")

  @@id([idreparacion, iddiagnostico])
}

model empresa {
  id             Int              @id @default(autoincrement())
  nombre         String?          @db.VarChar(250)
  descripcion    String?
  direccion      String?
  telefono       String?          @db.VarChar(30)
  web            String?
  diagnostico    diagnostico[]
  reparacion     reparacion[]
  usuarioempresa usuarioempresa[]
}

model usuarioempresa {
  idusuario String  @db.Uuid
  idempresa Int
  empresa   empresa @relation(fields: [idempresa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuarioempresa_empresa")

  @@id([idusuario, idempresa])
}

view devices {
  id      Int     @unique
  model   String? @db.VarChar(250)
  brand   String? @db.VarChar(250)
  company String? @db.VarChar(250)
}

view diagnosticosview {
  id               Int       @unique
  nombre           String?   @db.VarChar(250)
  modelopopular    String?   @db.VarChar(250)
  fecha            DateTime? @db.Timestamptz(6)
  descripcionfalla String?
  costopresupuesto Decimal?  @db.Money
  empresa          Int?
}

view reparacionesview {
  id          Int       @unique
  uuid        String?   @db.Uuid
  nombre      String?   @db.VarChar(250)
  apellido    String?   @db.VarChar(250)
  telefono    String?   @db.VarChar(20)
  recepcion   DateTime? @db.Timestamptz(6)
  entrega     DateTime? @db.Timestamptz(6)
  modelo      String?   @db.VarChar(250)
  marca       String?   @db.VarChar(250)
  falla       String?
  diagnostico String?
  presupuesto Decimal?  @db.Money
  total       Decimal?  @db.Money
  empresa     Int?
}
